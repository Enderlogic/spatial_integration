R.version
install.packages(c("bnlearn", "classInt", "dplyr", "foreign", "labeling", "Matrix", "MatrixModels", "minqa", "quantreg", "rematch", "wk"))
install.packages("pcalg")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RBGL")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.17")
R -version
R.version
R.version
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.17")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("RBGL")
source("~/.active-rstudio-document")
View(true.pag)
plot(g)
install.packages('Rgraphviz')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Rgraphviz")
plot(g)
plot(true.pag)
install.packages(c("lattice", "lifecycle", "Matrix", "RcppArmadillo", "rlang"))
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
View(X)
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
0*x2
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
plot(seq(-1, 0, by=0.01), disp)
plot(seq(-1, 0.01, by=0.01), disp)
plot(seq(-1, -0.01, by=0.01), disp)
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
print(disp)
plot(disp)
t(X) %*% X %*% c(1, 0) - t(X) %*% y
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/project/invariant learning/discrepancy.R")
source("~/OneDrive - Queen Mary, University of London/postdoc/single cell RNA sequencing/cell-cell interaction/CCI_evaluation-main/scripts/run_cc.R")
source("~/OneDrive - Queen Mary, University of London/postdoc/single cell RNA sequencing/cell-cell interaction/CCI_evaluation-main/scripts/run_cc.R")
install.packages('optparse')
install.packages(c("cli", "cluster", "cpp11", "fastICA", "foreign", "igraph", "lifecycle", "Matrix", "mgcv", "nlme", "Rcpp", "RcppArmadillo", "rlang", "robustbase", "rpart", "vcd"))
source("~/OneDrive - Queen Mary, University of London/postdoc/single cell RNA sequencing/cell-cell interaction/CCI_evaluation-main/scripts/run_cc.R")
install.packages('CellChat')
source("~/OneDrive - Queen Mary, University of London/postdoc/single cell RNA sequencing/cell-cell interaction/CCI_evaluation-main/scripts/run_cc.R")
devtools::install_github("jinworks/CellChat")
install.packages('devtools')
devtools::install_github("jinworks/CellChat")
devtools::install_github("jinworks/CellChat")
R.Version()
install.packages('devtools')
devtools::install_github('xzhoulab/SRTSIM')
devtools::install_github('xzhoulab/SRTsim')
install.packages('concaveman')
install.packages('devtools')
devtools::install_github('YMa-lab/CARD')
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SingleCellExperiment")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SummarizedExperiment")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SummarizedExperiment", force = TRUE)
devtools::install_github('YMa-lab/CARD')
xcode-select --install
brew install gcc
devtools::install_github('YMa-lab/CARD')
devtools::install_github('YMa-lab/CARD')
devtools::install_github('YMa-lab/CARD')
file.path(R.home(), "bin", "R")
install.packages(c("backports", "broom", "cachem", "cli", "crayon", "DBI", "downlit", "dqrng", "evaluate", "farver", "fastmap", "ggfun", "ggsci", "highr", "KernSmooth", "knitr", "lme4", "minqa", "nlme", "nloptr", "openssl", "quantreg", "ragg", "RcppArmadillo", "reticulate", "rlang", "rmarkdown", "scatterpie", "Seurat", "SeuratObject", "SparseM", "spatstat.data", "spatstat.sparse", "spatstat.utils", "survival", "systemfonts", "textshaping", "uwot", "wrMisc", "xfun"))
install.packages('remotes')
remotes::install_github('theislab/kBET')
library(readr)
scpoli_evaluation <- read_csv("OneDrive - Hong Kong Baptist University/postdoc/batch_effect/result/scpoli_evaluation.csv")
View(scpoli_evaluation)
library(readr)
ivae_evaluation <- read_csv("OneDrive - Hong Kong Baptist University/postdoc/batch_effect/result/ivae_evaluation.csv")
View(ivae_evaluation)
View(ivae_evaluation)
unique(scpoli_evaluation$data)
length(scpoli_evaluation)
nrow(scpoli_evaluation)
result = scpoli_evaluation
result[1, :]
result[1,]
ivae_evaluation[ivae_evaluation$data == result[i, 'data']]
ivae_evaluation[ivae_evaluation$data == result[1, 'data']]
result[1]
result[1, ]
result[1, ]$data
result$data
result$data[1]
ivae_evaluation$data == result$data[1]
ivae_evaluation[ivae_evaluation$data == result$data[1]]
ivae_evaluation[ivae_evaluation$data == result$data[1], ]
ivae_evaluation[ivae_evaluation$data == result$data[1] & ivae_evaluation$`query proportion` == result$`query proportions`[1], ]
ivae_evaluation[(ivae_evaluation$data == result$data[1]) & (ivae_evaluation$`query proportion` == result$`query proportions`[1]), ]
ivae_evaluation$`query proportion` == result$
`query proportions`[1]
ivae_evaluation$`query proportion` == result$`query proportion`[1]
ivae_evaluation[ivae_evaluation$data == result$data[1] & ivae_evaluation$`query proportion` == result$`query proportion`[1], ]
ivae_evaluation[ivae_evaluation$data == result$data[i] & ivae_evaluation$`query proportion` == result$`query proportion`[i], ]
i = 1
ivae_evaluation[ivae_evaluation$data == result$data[i] & ivae_evaluation$`query proportion` == result$`query proportion`[i], ]
ivae_evaluation[ivae_evaluation$data == result$data[i] & ivae_evaluation$`query proportion` == result$`query proportion`[i], ]
ivae_evaluation[ivae_evaluation$data == result$data[i] & ivae_evaluation$`query proportion` == result$`query proportion`[i], 'NMI']
debugSource("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
ivae_evaluation[ivae_evaluation$data == result$data[i] & ivae_evaluation$`query proportion` == result$`query proportion`[i] & ivae_evaluation$`s proportion` == s_prop & ivae_evaluation$`flows number of layers` == flows_n_layers, ]
colnames(result)
colnames(result)[2:]
colnames(result)[[2:]]
colnames(result)
colnames(result)[2:]
colnames(result)[2:-1]
colnames(result)
colnames(result)[2]
colnames(result)[c(2)]
colnames(result)[c(2:16)]
colnames(result)[c(2:)]
colnames(result)[c(2:16)]
colnames(result)[c(3:16)]
ivae_evaluation[ivae_evaluation$data == result$data[i] & ivae_evaluation$`query proportion` == result$`query proportion`[i] & ivae_evaluation$`s proportion` == s_prop & ivae_evaluation$`flows number of layers` == flows_n_layers, ]
ivae_evaluation[ivae_evaluation$data == result$data[i] & ivae_evaluation$`query proportion` == result$`query proportion`[i] & ivae_evaluation$`s proportion` == s_prop & ivae_evaluation$`flows number of layers` == flows_n_layers, colnames(result)[c(3:16)]]
debugSource("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
debugSource("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
debugSource("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
merge(result, scpoli_evaluation)
rbind(result, scpoli_evaluation)
result = scpoli_evaluation
result$method = 'scpoli'
debugSource("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
debugSource("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
debugSource("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
debugSource("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
debugSource("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
s_prop
as.character(0.2)
as.character(s_prop)
'ivae_' + as.character(s_prop) + '_' + as.character(flows_n_layers)
flows_n_layers
as.character(4)
paste0('ivae_' + as.character(s_prop) + '_' + as.character(flows_n_layers))
paste0('ivae_', as.character(s_prop), '_', as.character(flows_n_layers))
debugSource("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
source("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
View(result)
result = scpoli_evaluation
result$method = 'scpoli'
for (s_prop in unique(ivae_evaluation$`s proportion`)) {
for (flows_n_layers in unique(ivae_evaluation$`flows number of layers`)) {
result_ivae = scpoli_evaluation
result_ivae$method = paste0('ivae_', as.character(s_prop), '_', as.character(flows_n_layers))
for (i in 1:nrow(scpoli_evaluation)) {
result_ivae[i, c(3:16)] = ivae_evaluation[ivae_evaluation$data == result$data[i] & ivae_evaluation$`query proportion` == result$`query proportion`[i] & ivae_evaluation$`s proportion` == s_prop & ivae_evaluation$`flows number of layers` == flows_n_layers, colnames(result)[c(3:16)]]
}
result = rbind(result, result_ivae)
}
}
ggplot
result$method = as.factor(result$method)
result$data = as.factor(result$data)
result$`query proportion` = as.factor(result$`query proportion`)
ggplot(data=result, aes(x=`query proportion`, fill = method)) + geom_bar(aes(y=score), position='dodge') + facet_grid(data~`query proportion`)
result = scpoli_evaluation
source("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
source("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
ggplot(data=result, aes(x=`query proportion`, fill = method)) + geom_bar(aes(y=score), position='dodge')
ggplot(data=result, aes(x=`query proportion`, fill = method)) + geom_bar(aes(y=score), position='dodge')
ggplot(data=result, aes(x=`query proportion`, fill = method)) + geom_bar(aes(y=score), position='dodge')
library(ggplot2)
library(dplyr)
tmp <- diamonds %>%
filter(color %in% c("E","I")) %>%
select(color, cut, clarity)
ggplot(
data = tmp,
aes(
x = clarity,
fill = cut
)
) +
geom_bar(
aes(y = after_stat(count / ave(count, PANEL, FUN = sum))),
position = "dodge"
) +
scale_y_continuous(labels = scales::percent) +
facet_wrap(vars(color))
plot(ggplot(data=result, aes(x=`query proportion`, fill = method)) + geom_bar(aes(y=score), position='dodge') + facet_grid(data~`query proportion`))
plot(ggplot(data=result, aes(x=`query proportion`, y= scote, fill = method)) + geom_bar(position='dodge') + facet_grid(data~`query proportion`))
ggplot(data=result, aes(x=`query proportion`, y= score, fill = method)) + geom_bar(position='dodge')
plot(ggplot(data=result, aes(x=`query proportion`, y= score, fill = method)) + geom_bar(stat='identity', position='dodge') + facet_grid(data~`query proportion`))
plot(ggplot(data=result, aes(x=`query proportion`, y= score, fill = method)) + geom_bar(stat='identity', position='dodge') + facet_wrap(var(data)))
plot(ggplot(data=result, aes(x=`query proportion`, y= score, fill = method)) + geom_bar(stat='identity', position='dodge') + facet_wrap(~data))
source("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
library(readr)
scpoli_evaluation <- read_csv("OneDrive - Hong Kong Baptist University/postdoc/batch_effect_v2/result/scpoli_evaluation.csv")
View(scpoli_evaluation)
source("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
library(readr)
ivae_evaluation <- read_csv("OneDrive - Hong Kong Baptist University/postdoc/batch_effect/result/ivae_evaluation.csv")
View(ivae_evaluation)
source("~/Library/CloudStorage/OneDrive-HongKongBaptistUniversity/postdoc/batch_effect/result/plot_result.R")
ggplot(data=result, aes(x=`query proportion`, fill = method)) + geom_bar(aes(y=score), position='dodge') + facet_grid(data~`query proportion`)
install.packages(c("cli", "digest", "fields", "foreign", "knitr", "lme4", "nloptr", "pbkrtest", "pkgdown", "pkgload", "ps", "RcppArmadillo", "reprex", "reticulate", "robustbase", "roxygen2", "Rvcg", "SparseM", "uwot", "wk", "yaml"))
install.packages(c("pkgdown", "RcppArmadillo", "reticulate", "uwot"))
install.packages(c("pkgdown", "RcppArmadillo", "reticulate", "uwot"))
install.packages(c("pkgdown", "RcppArmadillo", "reticulate", "uwot"))
install.packages(c("pkgdown", "RcppArmadillo", "reticulate", "uwot"))
install.packages(c("fitdistrplus", "pkgdown", "RcppArmadillo", "RCurl", "reticulate", "spatstat.explore", "spatstat.geom", "spatstat.random", "uwot"))
install.packages(c("fitdistrplus", "pkgdown", "RcppArmadillo", "reticulate", "spatstat.explore", "spatstat.geom", "spatstat.random", "uwot"))
install.packages(c("BiocManager", "bslib", "corrplot", "cpp11", "curl", "data.table", "digest", "fastDummies", "fastICA", "fBasics", "fitdistrplus", "future", "gert", "httr2", "minqa", "nlme", "NMF", "openssl", "parallelly", "pkgdown", "polyclip", "RANN", "RcppArmadillo", "RcppEigen", "reticulate", "rmarkdown", "robustbase", "RSpectra", "s2", "sfsmisc", "shiny", "spatstat.explore", "spatstat.geom", "spatstat.random", "spatstat.utils", "SRTsim", "stabledist", "tinytex", "usethis", "uuid", "uwot", "V8", "waldo", "wrMisc", "xfun", "yaml"))
remove.packages("mclust")
remove.packages("mclust")
install.packages(c("abind", "BiocManager", "boot", "caTools", "cpp11", "data.table", "Deriv", "e1071", "evaluate", "ggfun", "ggrepel", "httr2", "matrixStats", "MCMCpack", "microbenchmark", "patchwork", "pcalg", "pkgdown", "ps", "ragg", "RcppArmadillo", "reticulate", "rjson", "scatterpie", "sf", "sna", "spatstat.geom", "spatstat.random", "spatstat.univar", "timeSeries", "tinytex", "uwot", "vcd", "vegan", "wk"))
devtools::install_github('YMa-lab/CARD')
devtools::install_github('YMa-lab/CARD')
locate libgfortran
debugSource("~/OneDrive - Hong Kong Baptist University/postdoc/spatial_integration/mouse_spleen.R")
rep_1@assays$CITE
MuDataSeurat::WriteH5AD(rep_1, "Dataset/mouse_spleen_rep1/adata_ADT_y.h5ad", assay = "CITE")
output_1 = CreateSeuratObject(rep_1_data$`Gene Expression`, assay = "RNA", project = "Rep_1")
output_1@assays$CITE <- rep_1_CITE@assays$CITE
MuDataSeurat::WriteH5AD(output_1, "Dataset/mouse_spleen_rep1/adata_RNA_y.h5ad", assay = "RNA")
MuDataSeurat::WriteH5AD(output_1, "Dataset/mouse_spleen_rep1/adata_ADT_y.h5ad", assay = "CITE")
debugSource("~/OneDrive - Hong Kong Baptist University/postdoc/spatial_integration/mouse_spleen.R")
